^\|botroll$ >> Never gonna give you up
^\|reload$ >> (function) >> $this->reload($sender);
^\|(lul|rampage|rawr)$ >> (function) >> rampage(0);
^\|eternalrampage$ >> (function) >> rampage(0, 1);
^\|deathpage$ >> (function) >> rampage(1);
^\|silentdeath$ >> (function) >> silentdeath(1);
^\|silentreload$ >> (function) >> silentdeath(0);
^\|silentfail$ >> _action_is silently failing.
^\|leave (.*)$ >> (function) >> $this->part($sender, $matches[1]);
^\|part (.*)$ >> (function) >> $this->part($sender, $matches[1]);
^\|dai$ >> (function) >> $this->dai($sender);
^\|auth (.+)$ >> (function) >> $this->auth($sender, $matches[1]);
^\|adduser (.+)$ >> (function) >> $this->privmsg('I will try adding '.$sender.' with a pw of '.sha1($matches[1]).' to the DB'); $this->adduser($sender, $matches[1]);
^\|authlevel (.+)$ >> (function) >> $this->privmsg($matches[1]." has an authority level of ".$this->authlevel($matches[1]));
^\|reloaduserdb$ >> (function) >> $this->privmsg("Okay!"); $this->loaduserdb();
^\|ne (.+)$ >> (function) >> $this->privmsg('S-sorry, '.$matches[1].', I can\'t give credit! Come back when you\'re a little... mmm... RICHER!');
^\|nick (.+)$ >> (function) >> $this->changenick($sender, $matches[1]);
^\|join (.+)$ >> (function) >> $this->join($sender, $matches[1]);
^\|serv (.+)$ >> (function) >> $this->send_server($matches[1]);
^\|grape$ >> (function) >> $this->privmsg("82.098grape+0.69622carrot=5788.122660962"); $this->privmsg("123.6862carrot/617.667grape=0.2729458914702683884440223473139500717056");
^\|calc (.+)$ >> (function) >> calc($sender, $matches[1]);
^\|pws (.+)$ >> (function) >> pws($matches[1]);
^\|root (.+) (.+)$ >> (function) >> $this->privmsg(pow($matches[1], 1/$matches[2]));
^\|pow (.+)\^(.+)$ >> (function) >> $this->privmsg(bcpow((string)$matches[1], (string)$matches[2]));
^\|sqrt (.+)$ >> (function) >> global $store; $this->privmsg(bcsqrt(eregi_replace("store", $store, $matches[1]))); $store = bcsqrt($matches[1]);
^\|boot$ >> (function) >> $this->action('flies OVER 9000 meters (actually '.rand(9000, 10000).' meters)'); exit(0);
^\|spl (.+)$ >> (function) >> if ($this->authlevel($sender)>1) { global $spl; $spl = $matches[1]; }
^\|store (.+)$ >> (function) >> store((float)$matches[1]);
^\|log (.+)$ >> (function) >> $this->searchlog($matches[1]);
^\|date(| (\d)+)$ >> (function) >> if (isset($matches[2])) { $this->privmsg(date("m/d/Y H:i:s e", trim($matches[1]))); } else { $this->privmsg(date("m/d/Y H:i:s e")); }
^\|time$ >> (function) >> $this->privmsg(time());
^\|debug (.+)$ >> (function) >> global ${$matches[1]}; print_r(${$matches[1]});
^\|\+64 (.+)$ >> (function) >> $this->privmsg(base64_encode($matches[1]));
^\|\-64 (.+)$ >> (function) >> $this->privmsg(base64_decode($matches[1]));
^\|olo$ >> olololololololololololololololololololololololololololo
^\|$ >> (function) >> if (file_get_contents("data/instantauth")=="yesh") { $this->instauth($sender); } else { $this->deny(); }
^\|ia$ >> (function) >> $this->privmsg(file_get_contents("data/instantauth"));
^\|serv$ >> (function) >> if ($this->authlevel($sender)>1) { $this->send_server($matches[1]); }
^\|chans$ >> (function) >> print_r($chans);
^\|xkcd$ >> (function) >> $this->privmsg(xkcd());
^\|slashdot(| (.+))$ >> (function) >> $this->privmsg(slashdot($matches));
^\|define (.+)$ >> (function) >> $this->privmsg(yotdict($matches[1]));
^\|\+def (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> if ($this->authlevel($sender)>0) { $this->privmsg(adddef($matches[2], $matches[5])); } else { $this->deny(); }
^\|\-def (.+)$ >> (function) >> if ($this->authlevel($sender)>0) { $this->privmsg(minusdef($matches[1])); } else { $this->deny(); }
^\|\:def (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> if (authlevel($sender)>0) { $this->privmsg(changedef($matches[2], $matches[5])); } else { $this->deny(); }
^\|eject$ >> _action_bails out over enemy territory and shakes his fist at _sender_ >> _action_ejects >> Arrrgh!  Not again!
^\|add (.+)$ >> (function) >> if($this->authlevel($sender)>50){ file_put_contents('data/factoids',file_get_contents('data/factoids').self::NL.$matches[1]);}else{ $this->deny();}
^\|:add (.+)$ >> (function) >> if($this->authlevel($sender)>50){ file_put_contents('data/factoids_specifically_for_me',file_get_contents('data/factoids_specifically_for_me').self::NL.$matches[1]);}else{$this->deny(); }
^\|ammo$ >> (function) >> global $ammo; $this->privmsg($ammo);
^\|type$ >> (function) >> global $type; $this->privmsg($type);
^\|\:type (.+)$ >> (function) >> if ($this->authlevel("_sender_")>1) { global $type,$noa; $noa = 0; $type = $matches[1]; $this->privmsg("Weapon type changed to \x02{$matches[1]}\x02"); } else { $this->deny(); }
^\|\_type (.+)$ >> (function) >> if ($this->authlevel("_sender_")>1) { global $type,$noa; $noa = 1; $type = $matches[1]; $this->privmsg("Weapon type changed to \x02{$matches[1]}\x02"); } else { $this->deny(); }
^\|:reload$ >> (function) >> global $ammo; if (($this->authlevel("_sender_")>1)&&($ammo==0)) { sleep(2); $ammo = 10; $this->privmsg("Ammo reloaded to $ammo"); } else { $this->deny(); }
^\|shoot (.+)$ >> (function) >> if ($this->authlevel("_sender_")>1) { shoot($matches[1], '_sender_'); } else { $this->deny(); }
^\|tempauth (.*) (.*)$ >> (function) >> if ($this->authlevel("_sender_")>24) { $this->users[] = array($matches[1], $matches[2], '', 1); $this->privmsg('_sender_ temporarily authed '.self::X02.$matches[1].self::X02.' with an authority level of '.self::X02.$matches[2].self::X02.'.'); } else { $this->deny(); }
^\|rf (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> rf($matches[2], $matches[5]);
^\|del (.+)$ >> (function) >> $this->delfact($sender, $matches[1]);
^\|rot13 (.+)$ >> (function) >> $this->privmsg(str_rot13($matches[1]));
^\|\-b64 (.+)$ >> (function) >> $this->privmsg(base64_decode($matches[1]));
^\|\+b64 (.+)$ >> (function) >> $this->privmsg(base64_encode($matches[1]));
^\|\+chan (.+)$ >> (function) >> if ($this->authlevel($sender)>10) { file_put_contents('data/chans', file_get_contents('data/chans').' '.$matches[1]); } else { $this->deny(); }
^\|\+ignore (.+)$ >> (function) >> $this->ignore($sender, $matches[1]);
^\|\-ignore (.+)$ >> (function) >> $this->unignore($sender, $matches[1]);
^\|ignores$ >> (function) >> $this->privmsg(implode(', ', $this->ignore));
^\|loadignore$ >> (function) >> $this->loadignore($sender);
^\|dance$ >> _action_spins crazily >> _action_crashes into a wall >> _action_does a sixstep
^\|createpotion (.+)$ >> (function) >> createpotion($matches[1]);
^\|addingredient (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> addingredient($matches[2], $matches[5]);
^\|savepotion (.+)$ >> (function) >> save_potion($matches[1]);
^\|mixpotion (.+)$ >> (function) >> mix($matches[1]);
^\|ingredients$ >> (function) >> global $ingredients; privmsg(implode(', ', $ingredients));
^\|what(|i|\')sin (.+)$ >> (function) >> whatisin($matches[2]);
^\|remove (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\}) from (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> print_r($matches); removefrom($matches[2], $matches[5], $matches[8]);
^\|help$ >> Missing argument. Usage: |help <module> (say |modules to see all loaded, non-stealth modules)
^\|help (.+)$ >> (function) >> global $modules; global $help; $flipmod = array_flip($modules); if (isset($flipmod[$matches[1]])) { $this->privmsg($help[$matches[1]]); } else { $this->privmsg("That module doesn't exist, isn't loaded, or is sekrit."); }
^\|modules$ >> (function) >> global $modules; $this->privmsg(implode(', ', $modules));
^\|showdown$ >> (function) >> global $ammo,$type; $ammo = 1; $this->privmsg('Ready...'); sleep(10); $ammo = 1; $type = 'shotgun'; $this->privmsg('Fire!');
^\|unauth (.+)$ >> (function) >> if ($this->authlevel($sender)>24) { foreach ($this->users as &$user) { if (($user[0]==$matches[1])&&($user[3])) { unset($user[3]); return $this->privmsg(self::X02.$matches[1].self::X02.' has been unauthed.'); } } $this->privmsg(self::X02.$matches[1].self::X02.' isn\'t authed and therefore can\'t be unauthed.'); } else { $this->deny(); }
^\|authed (.+)$ >> (function) >> foreach ($this->users as &$user) { if (($user[0]==$matches[1])&&($user[3])) { return $this->privmsg(self::X02.$matches[1].self::X02.' is '.self::X02.'authed.'.self::X02); } } $this->privmsg(self::X02.$matches[1].self::X02.' is '.self::X02.'not authed.'.self::X02);
^\|sayw \[(.+)\] (.+)$ >> (function) >> $this->privmsg($matches[2], $matches[1]);
^\|get (.+)$ >> (function) >> $this->privmsg(getfrompastebin($matches[1]));
^\|action (.*) do (.*)$ >> (function) >> $this->action($matches[2], $matches[1]);
^\|toast (.+) >> (function) >> if($this->authlevel($sender) > 0 || $this->checkuser($matches[1])){$this->send_server('NICK A_toaster'); $this->action('toasts '.$matches[1]); $this->send_server('NICK '. $this->nick);} else { $this->deny();} }
^\|\+note (\[|\(|\{)(.+)(\]|\)|\}) (\[|\(|\{)(.+)(\]|\)|\})$ >> (function) >> $this->privmsg(takenote($matches[2], $matches[5]));
^\|:note (.+)$ >> (function) >> $this->privmsg(getnote($matches[1]));
^\|namein$ >> (function) >> $this->privmsg($this->namein());
^\|namein (.+)$ >> (function) >> $this->privmsg($this->namein($matches[1]));
^\|prob (.+)$ >> (function) >> if(1){global $prob;$prob=$matches[1]; $this->privmsg('Markov probability set to '.$prob);}else{$this->deny();}
^\|prob$ >> (function) >> global $prob; $this->privmsg($prob);
^\|markov$ >> (function) >> $this->privmsg(markov($matches[0],1));
^\|ghost (.+)$ >> (function) >> $this->privmsg('GHOST _owner_ '.$matches[1], 'nickserv');
^\|chans$ >> (function) >> $this->privmsg(implode(', ', $this->chans));
^\|nuke (.+)$ >> (function) >> if($this->checkuser($matches[1])) { $this->action('places a warhead near '.$matches[1]); sleep(3); $this->action('throws random burning stuff and plutonium at '.$matches[1]); sleep(1); $this->privmsg('['.$matches[1].' explodes]'); } else { $this->deny(); }
^\|trap (.+)$ >> (function) >> if($this->checkuser($matches[1])) { $this->action('chases '.$matches[1]); sleep(2); $this->action('corners '.$matches[1]); sleep(2); $this->action('grabs '.$matches[1]); sleep(1); $this->action('throws '.$matches[1].' in a cage'); sleep(2); $this->action('locks the cage'); } else { $this->deny(); }
^\|_nick_$ >> OH HAI
^\|choose (.+) or (.+) >> (function) >> if(rand(0,1)){ $this->privmsg($matches[1]); } else { $this->privmsg($matches[2]);}
^\|ident (.+)$ >> (function) >> $this->privmsg('IDENTIFY '.$matches[1], 'nickserv');
^\|repeat (.+) msg (.+)$ >> (function) >> $this->privmsg($matches[2], $matches[1]);
^\|restart$ >> (function) >> $this->reload($sender);
^\|dumplogs$ >> (function) >> if($this->authlevel($sender) > 24){ file_put_contents('log', ''); $this->privmsg('Log file purged.'); } else { $this->deny(); }
^\|kick (.*) (.*)$ >> (function) >> $this->kick($sender, $matches[1], $matches[2]);
^\|eval (.+) >> (function) >> $this->deny(); if(1=0){shmeval("_sender_ ", $matches[1]);}
^\|hug$ >> _action_glomps _sender_ >> _action_gives _sender_ a hug
^\|hug (.*) >> (function) >> $this->action('goes over and hugs '.$matches[1]);